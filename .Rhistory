filter(Year %in% (2000:2013))
colnames(data)
## Panel 1 part 2
by_nation <- data %>%
filter(st == 0) %>%
filter(Year %in% c(2000:2013))
View(by_nation)
View(by_nation)
View(data)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year") %>%
mutate(Year = format(as.Date(Year)))
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
## Panel 1 part 2
by_nation <- data %>%
filter(st == 0) %>%
filter(Year %in% c(2000:2013))
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
helpText("Make sure to spell state name correctly"),
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
sliderInput(
inputId = "yearpt1_1",
label = "Select Year Range",
min = min(data$year),
max = max(data$year),
sep = "",
value = max(data$year)
),
radioButtons(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"
)
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
helpText("Make sure to spell state name correctly"),
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
sliderInput(
inputId = "yearpt1_1",
label = "Select Year Range",
min = min(data$Year),
max = max(data$Year),
sep = "",
value = max(data$Year)
),
radioButtons(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"
)
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
library(shiny)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = navui, server = server)
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
helpText("Make sure to spell state name correctly"),
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
sliderInput(
inputId = "yearpt1_1",
label = "Select Year Range",
min = min(data$Year),
max = max(data$Year),
sep = "",
value = max(data$Year),
round = TRUE
),
radioButtons(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"
)
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
library(shiny)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = navui, server = server)
View(by_nation)
library(tidyr)
View(data)
by_state <- data %>%
filter(st != 0) %>%
gather(-st, -RMeanDev, key = "Index", value = "Index Value") %>%
group_by(State) %>%
filter(State %in% c(input$state))
by_state <- data %>%
filter(st != 0) %>%
gather(-st, -RMeanDev, key = "Index", value = "Index Value")
View(by_state)
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Index Value") %>%
group_by(State) %>%
filter(State %in% c(input$state))
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Index Value") %>%
group_by(State) %>%
filter(State %in% c(input$state))
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Index Value") %>%
group_by(State) %>%
filter(State %in% c(what_state))
View(by_state)
by_state_plot <- ggplot(by_state, aes(Year), label = "Index") +
geom_line(aes(y = Index, color = "Index"))
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(Year), label = "Index") +
geom_line(aes(y = Index))
ggplotly(by_state_plot)
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(what_state))
by_state_plot <- ggplot(by_state, aes(Year), label = "Index") +
geom_line(aes(y = Index, color = "Value"))
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(Year), label = "Index") +
geom_line(aes(y = Index, color = Value))
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index))
ggplotly(by_state_plot)
server <- function(input, output){
output$by_state_inequality <- renderPlotly({
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Index Value") %>%
group_by(State) %>%
filter(State %in% c(input$state)) %>%
filter(Index %in% c(input$index_typep1_1))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(by_state_plot)
})
}
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
checkboxGroupInput(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05",
selected = c("Theil", "Gini", "Atkin05")
)
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
library(shiny)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = navui, server = server)
library(dplyr)
library(reshape2)
library(ggplot2)
library(plotly)
library(tidyr)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
server <- function(input, output){
output$by_state_inequality <- renderPlotly({
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(input$state)) %>%
filter(Index %in% c(input$index_typep1_1))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(by_state_plot)
})
}
library(dplyr)
library(reshape2)
library(ggplot2)
library(plotly)
library(tidyr)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
server <- function(input, output){
output$by_state_inequality <- renderPlotly({
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(input$state)) %>%
filter(Index %in% c(input$index_typep1_1))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(by_state_plot)
})
}
library(shiny)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = navui, server = server)
setwd("C:/Users/rchap/Coding/RProjects/Inequality-Analysis")
View(by_nation)
View(by_state)
View(data)
View(by_nation)
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
checkboxGroupInput(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"),
selected = c("Theil")
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
library(dplyr)
library(reshape2)
library(ggplot2)
library(plotly)
library(tidyr)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
server <- function(input, output){
output$by_state_inequality <- renderPlotly({
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(input$state)) %>%
filter(Index %in% c(input$index_typep1_1))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(by_state_plot)
})
}
library(shiny)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = navui, server = server)
## This is panel 1 part 1
what_state <- c("Washington", "Alabama")
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(what_state))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index))
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_wrap(by_state$State)
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_wrap("Washington")
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_wrap(~align)
ggplotly(by_state_plot)
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_wrap(~State)
ggplotly(by_state_plot)
## Panel 1 part 2
by_nation <- data %>%
filter(st == 0) %>%
filter(Year %in% c(2000:2013))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_grid(~State)
ggplotly(by_state_plot)
by_nation <- data %>%
filter(st == 0)
library(dplyr)
library(reshape2)
library(ggplot2)
library(plotly)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
## This is panel 1 part 1
what_state <- c("Washington", "Alabama")
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(what_state))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) + facet_grid(~State)
ggplotly(by_state_plot)
## Panel 1 part 2
by_nation <- data %>%
filter(st == 0)
colnames(data)
library(dplyr)
library(reshape2)
library(ggplot2)
library(plotly)
library(tidyr)
data <- read.csv("inequality_data.csv") %>%
rename("Year" = "ï..Year")
server <- function(input, output){
output$by_state_inequality <- renderPlotly({
by_state <- data %>%
filter(st != 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
group_by(State) %>%
filter(State %in% c(input$state)) %>%
filter(Index %in% c(input$index_typep1_1))
by_state_plot <- ggplot(by_state, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(by_state_plot)
})
output$nation_ineqality <- renderPlotly({
by_nation <- data %>%
filter(st == 0) %>%
gather(-Year, -State, -st, -RMeanDev, key = "Index", value = "Value") %>%
filter(Index %in% c(input$index_typep1_2))
nation_plot <- ggplot(by_nation, aes(x = Year, y = Value)) +
geom_line(aes(color = Index)) +
ylab("")
ggplotly(nation_plot)
})
}
source("tabPanelOne.R")
library(shiny)
dashui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
indicies_by_state <- tabPanel(
"Inequality By State",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "state",
label = "Choose state to analyze",
choices = unique(data$State),
selected = "Alabama"
),
checkboxGroupInput(
inputId = "index_typep1_1",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"),
selected = c("Theil")
)
),
mainPanel(
plotlyOutput("by_state_inequality")
)
),
sidebarLayout(
sidebarPanel(
checkboxGroupInput(
inputId = "index_typep1_2",
"Choose Index:",
choices = c(
"Theil" = "Theil",
"Gini" = "Gini",
"Atkin" = "Atkin05"),
selected = c("Theil")
)
),
mainPanel(
plotlyOutput("nation_ineqality")
)
)
)
navui <- navbarPage(
"Inequality Index",
indicies_by_state
)
shinyApp(ui = navui, server = server)
